name: Release
on: push

env:
  archive-name: Giti
  src-dir: ./src/
  target-project: ./Giti/Giti.csproj
  out-dir: ./out/
  artifacts-dir: ./artifacts/

jobs:
  build:
    runs-on: windows-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0
      
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.x

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.5
        with:
          versionSpec: "5.x"

      - name: Install dependencies
        run: dotnet restore
        working-directory: ${{ env.src-dir }}

      - name: Publish
        run: dotnet publish -o "../${{ env.out-dir }}" -c Release --self-contained false --no-restore ${{ env.target-project }}
        working-directory: ${{ env.src-dir }}

      - name: Versioning
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.5

      - name: Create directory
        run: |
          md -Force ${{ env.artifacts-dir }}
        shell: pwsh

      - name: Set variable
        id: vars
        run: echo "::set-output name=filepath::${{ env.artifacts-dir }}${{ env.archive-name }}-${{ steps.gitversion.outputs.fullSemVer }}.zip" 
  
      - name: Zip
        run: |
          Compress-Archive -Path ${{ env.out-dir }}/* -DestinationPath ${{ steps.vars.outputs.filepath }}
        shell: pwsh

      - name: Hash
        run: |
          $hash = $(Get-FileHash ${{ steps.vars.outputs.filepath }}).Hash
          $hash | Set-Content ${{ steps.vars.outputs.filepath }}.sha256
        shell: pwsh

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          path: ${{ env.artifacts-dir }}

      - name: Release Github
        uses: softprops/action-gh-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          draft: true
          files: "${{ env.artifacts-dir }}/*"
          name: ${{ steps.gitversion.outputs.fullSemVer }}
          tag_name: ${{ steps.gitversion.outputs.fullSemVer }}